package com.boating.cs.impl;

import com.boating.cs.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultPort <br>
 * @version generated on Mon Apr 16 16:18:00 CEST 2018 by fh231
 */
public class DefaultPort extends WrappedIndividualImpl implements Port {

    public DefaultPort(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#acceptsBoatType
     */
     
    public Collection<? extends WrappedIndividual> getAcceptsBoatType() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ACCEPTSBOATTYPE,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasAcceptsBoatType() {
	   return !getAcceptsBoatType().isEmpty();
    }

    public void addAcceptsBoatType(WrappedIndividual newAcceptsBoatType) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ACCEPTSBOATTYPE,
                                       newAcceptsBoatType);
    }

    public void removeAcceptsBoatType(WrappedIndividual oldAcceptsBoatType) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ACCEPTSBOATTYPE,
                                          oldAcceptsBoatType);
    }


    /* ***************************************************
     * Object Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#connectsTo
     */
     
    public Collection<? extends Haven> getConnectsTo() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_CONNECTSTO,
                                               DefaultHaven.class);
    }

    public boolean hasConnectsTo() {
	   return !getConnectsTo().isEmpty();
    }

    public void addConnectsTo(Haven newConnectsTo) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_CONNECTSTO,
                                       newConnectsTo);
    }

    public void removeConnectsTo(Haven oldConnectsTo) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_CONNECTSTO,
                                          oldConnectsTo);
    }


    /* ***************************************************
     * Object Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#havenBerths
     */
     
    public Collection<? extends Berth> getHavenBerths() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAVENBERTHS,
                                               DefaultBerth.class);
    }

    public boolean hasHavenBerths() {
	   return !getHavenBerths().isEmpty();
    }

    public void addHavenBerths(Berth newHavenBerths) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAVENBERTHS,
                                       newHavenBerths);
    }

    public void removeHavenBerths(Berth oldHavenBerths) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAVENBERTHS,
                                          oldHavenBerths);
    }


    /* ***************************************************
     * Data Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#berthCapacity
     */
     
    public Collection<? extends Integer> getBerthCapacity() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHCAPACITY, Integer.class);
    }

    public boolean hasBerthCapacity() {
		return !getBerthCapacity().isEmpty();
    }

    public void addBerthCapacity(Integer newBerthCapacity) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHCAPACITY, newBerthCapacity);
    }

    public void removeBerthCapacity(Integer oldBerthCapacity) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHCAPACITY, oldBerthCapacity);
    }


    /* ***************************************************
     * Data Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#berthsAvailable
     */
     
    public Collection<? extends Integer> getBerthsAvailable() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHSAVAILABLE, Integer.class);
    }

    public boolean hasBerthsAvailable() {
		return !getBerthsAvailable().isEmpty();
    }

    public void addBerthsAvailable(Integer newBerthsAvailable) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHSAVAILABLE, newBerthsAvailable);
    }

    public void removeBerthsAvailable(Integer oldBerthsAvailable) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHSAVAILABLE, oldBerthsAvailable);
    }


    /* ***************************************************
     * Data Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#havenName
     */
     
    public Collection<? extends String> getHavenName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAVENNAME, String.class);
    }

    public boolean hasHavenName() {
		return !getHavenName().isEmpty();
    }

    public void addHavenName(String newHavenName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAVENNAME, newHavenName);
    }

    public void removeHavenName(String oldHavenName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAVENNAME, oldHavenName);
    }


}
