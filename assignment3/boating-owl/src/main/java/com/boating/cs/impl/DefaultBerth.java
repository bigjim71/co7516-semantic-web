package com.boating.cs.impl;

import com.boating.cs.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultBerth <br>
 * @version generated on Mon Apr 16 16:18:00 CEST 2018 by fh231
 */
public class DefaultBerth extends WrappedIndividualImpl implements Berth {

    public DefaultBerth(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#locatedIn
     */
     
    public Collection<? extends Haven> getLocatedIn() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_LOCATEDIN,
                                               DefaultHaven.class);
    }

    public boolean hasLocatedIn() {
	   return !getLocatedIn().isEmpty();
    }

    public void addLocatedIn(Haven newLocatedIn) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_LOCATEDIN,
                                       newLocatedIn);
    }

    public void removeLocatedIn(Haven oldLocatedIn) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_LOCATEDIN,
                                          oldLocatedIn);
    }


    /* ***************************************************
     * Data Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#berthMaxLength
     */
     
    public Collection<? extends Integer> getBerthMaxLength() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHMAXLENGTH, Integer.class);
    }

    public boolean hasBerthMaxLength() {
		return !getBerthMaxLength().isEmpty();
    }

    public void addBerthMaxLength(Integer newBerthMaxLength) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHMAXLENGTH, newBerthMaxLength);
    }

    public void removeBerthMaxLength(Integer oldBerthMaxLength) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHMAXLENGTH, oldBerthMaxLength);
    }


    /* ***************************************************
     * Data Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#berthName
     */
     
    public Collection<? extends String> getBerthName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHNAME, String.class);
    }

    public boolean hasBerthName() {
		return !getBerthName().isEmpty();
    }

    public void addBerthName(String newBerthName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHNAME, newBerthName);
    }

    public void removeBerthName(String oldBerthName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BERTHNAME, oldBerthName);
    }


}
