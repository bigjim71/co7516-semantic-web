package com.boating.cs;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: LeisureRoute <br>
 * @version generated on Mon Apr 16 16:18:00 CEST 2018 by fh231
 */

public interface LeisureRoute extends Route {

    /* ***************************************************
     * Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#allowedBoatType
     */
     
    /**
     * Gets all property values for the allowedBoatType property.<p>
     * 
     * @returns a collection of values for the allowedBoatType property.
     */
    Collection<? extends WrappedIndividual> getAllowedBoatType();

    /**
     * Checks if the class has a allowedBoatType property value.<p>
     * 
     * @return true if there is a allowedBoatType property value.
     */
    boolean hasAllowedBoatType();

    /**
     * Adds a allowedBoatType property value.<p>
     * 
     * @param newAllowedBoatType the allowedBoatType property value to be added
     */
    void addAllowedBoatType(WrappedIndividual newAllowedBoatType);

    /**
     * Removes a allowedBoatType property value.<p>
     * 
     * @param oldAllowedBoatType the allowedBoatType property value to be removed.
     */
    void removeAllowedBoatType(WrappedIndividual oldAllowedBoatType);


    /* ***************************************************
     * Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#routeHavens
     */
     
    /**
     * Gets all property values for the routeHavens property.<p>
     * 
     * @returns a collection of values for the routeHavens property.
     */
    Collection<? extends Haven> getRouteHavens();

    /**
     * Checks if the class has a routeHavens property value.<p>
     * 
     * @return true if there is a routeHavens property value.
     */
    boolean hasRouteHavens();

    /**
     * Adds a routeHavens property value.<p>
     * 
     * @param newRouteHavens the routeHavens property value to be added
     */
    void addRouteHavens(Haven newRouteHavens);

    /**
     * Removes a routeHavens property value.<p>
     * 
     * @param oldRouteHavens the routeHavens property value to be removed.
     */
    void removeRouteHavens(Haven oldRouteHavens);


    /* ***************************************************
     * Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#routeName
     */
     
    /**
     * Gets all property values for the routeName property.<p>
     * 
     * @returns a collection of values for the routeName property.
     */
    Collection<? extends String> getRouteName();

    /**
     * Checks if the class has a routeName property value.<p>
     * 
     * @return true if there is a routeName property value.
     */
    boolean hasRouteName();

    /**
     * Adds a routeName property value.<p>
     * 
     * @param newRouteName the routeName property value to be added
     */
    void addRouteName(String newRouteName);

    /**
     * Removes a routeName property value.<p>
     * 
     * @param oldRouteName the routeName property value to be removed.
     */
    void removeRouteName(String oldRouteName);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
