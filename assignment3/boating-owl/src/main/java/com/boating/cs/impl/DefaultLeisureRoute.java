package com.boating.cs.impl;

import com.boating.cs.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultLeisureRoute <br>
 * @version generated on Mon Apr 16 16:18:00 CEST 2018 by fh231
 */
public class DefaultLeisureRoute extends WrappedIndividualImpl implements LeisureRoute {

    public DefaultLeisureRoute(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#allowedBoatType
     */
     
    public Collection<? extends WrappedIndividual> getAllowedBoatType() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ALLOWEDBOATTYPE,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasAllowedBoatType() {
	   return !getAllowedBoatType().isEmpty();
    }

    public void addAllowedBoatType(WrappedIndividual newAllowedBoatType) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ALLOWEDBOATTYPE,
                                       newAllowedBoatType);
    }

    public void removeAllowedBoatType(WrappedIndividual oldAllowedBoatType) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ALLOWEDBOATTYPE,
                                          oldAllowedBoatType);
    }


    /* ***************************************************
     * Object Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#routeHavens
     */
     
    public Collection<? extends Haven> getRouteHavens() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ROUTEHAVENS,
                                               DefaultHaven.class);
    }

    public boolean hasRouteHavens() {
	   return !getRouteHavens().isEmpty();
    }

    public void addRouteHavens(Haven newRouteHavens) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ROUTEHAVENS,
                                       newRouteHavens);
    }

    public void removeRouteHavens(Haven oldRouteHavens) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ROUTEHAVENS,
                                          oldRouteHavens);
    }


    /* ***************************************************
     * Data Property http://www.co7516coursework1.com/jl571/OntologyJl571.rdf#routeName
     */
     
    public Collection<? extends String> getRouteName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ROUTENAME, String.class);
    }

    public boolean hasRouteName() {
		return !getRouteName().isEmpty();
    }

    public void addRouteName(String newRouteName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ROUTENAME, newRouteName);
    }

    public void removeRouteName(String oldRouteName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ROUTENAME, oldRouteName);
    }


}
