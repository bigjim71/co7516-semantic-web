package uk.ac.le.cs.CO7216;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Student <br>
 * @version generated on Tue Mar 15 14:27:49 GMT 2016 by admin
 */

public interface Student extends Person {

    /* ***************************************************
     * Property http://www.cs.le.ac.uk/rdf#hasFriend
     */
     
    /**
     * Gets all property values for the hasFriend property.<p>
     * 
     * @returns a collection of values for the hasFriend property.
     */
    Collection<? extends Person> getHasFriend();

    /**
     * Checks if the class has a hasFriend property value.<p>
     * 
     * @return true if there is a hasFriend property value.
     */
    boolean hasHasFriend();

    /**
     * Adds a hasFriend property value.<p>
     * 
     * @param newHasFriend the hasFriend property value to be added
     */
    void addHasFriend(Person newHasFriend);

    /**
     * Removes a hasFriend property value.<p>
     * 
     * @param oldHasFriend the hasFriend property value to be removed.
     */
    void removeHasFriend(Person oldHasFriend);


    /* ***************************************************
     * Property http://www.cs.le.ac.uk/rdf#knows
     */
     
    /**
     * Gets all property values for the knows property.<p>
     * 
     * @returns a collection of values for the knows property.
     */
    Collection<? extends Person> getKnows();

    /**
     * Checks if the class has a knows property value.<p>
     * 
     * @return true if there is a knows property value.
     */
    boolean hasKnows();

    /**
     * Adds a knows property value.<p>
     * 
     * @param newKnows the knows property value to be added
     */
    void addKnows(Person newKnows);

    /**
     * Removes a knows property value.<p>
     * 
     * @param oldKnows the knows property value to be removed.
     */
    void removeKnows(Person oldKnows);


    /* ***************************************************
     * Property http://www.cs.le.ac.uk/rdf#study
     */
     
    /**
     * Gets all property values for the study property.<p>
     * 
     * @returns a collection of values for the study property.
     */
    Collection<? extends Module> getStudy();

    /**
     * Checks if the class has a study property value.<p>
     * 
     * @return true if there is a study property value.
     */
    boolean hasStudy();

    /**
     * Adds a study property value.<p>
     * 
     * @param newStudy the study property value to be added
     */
    void addStudy(Module newStudy);

    /**
     * Removes a study property value.<p>
     * 
     * @param oldStudy the study property value to be removed.
     */
    void removeStudy(Module oldStudy);


    /* ***************************************************
     * Property http://www.cs.le.ac.uk/rdf#has_age
     */
     
    /**
     * Gets all property values for the has_age property.<p>
     * 
     * @returns a collection of values for the has_age property.
     */
    Collection<? extends Integer> getHas_age();

    /**
     * Checks if the class has a has_age property value.<p>
     * 
     * @return true if there is a has_age property value.
     */
    boolean hasHas_age();

    /**
     * Adds a has_age property value.<p>
     * 
     * @param newHas_age the has_age property value to be added
     */
    void addHas_age(Integer newHas_age);

    /**
     * Removes a has_age property value.<p>
     * 
     * @param oldHas_age the has_age property value to be removed.
     */
    void removeHas_age(Integer oldHas_age);



    /* ***************************************************
     * Property http://www.cs.le.ac.uk/rdf#has_email
     */
     
    /**
     * Gets all property values for the has_email property.<p>
     * 
     * @returns a collection of values for the has_email property.
     */
    Collection<? extends String> getHas_email();

    /**
     * Checks if the class has a has_email property value.<p>
     * 
     * @return true if there is a has_email property value.
     */
    boolean hasHas_email();

    /**
     * Adds a has_email property value.<p>
     * 
     * @param newHas_email the has_email property value to be added
     */
    void addHas_email(String newHas_email);

    /**
     * Removes a has_email property value.<p>
     * 
     * @param oldHas_email the has_email property value to be removed.
     */
    void removeHas_email(String oldHas_email);



    /* ***************************************************
     * Property http://www.cs.le.ac.uk/rdf#has_full_name
     */
     
    /**
     * Gets all property values for the has_full_name property.<p>
     * 
     * @returns a collection of values for the has_full_name property.
     */
    Collection<? extends String> getHas_full_name();

    /**
     * Checks if the class has a has_full_name property value.<p>
     * 
     * @return true if there is a has_full_name property value.
     */
    boolean hasHas_full_name();

    /**
     * Adds a has_full_name property value.<p>
     * 
     * @param newHas_full_name the has_full_name property value to be added
     */
    void addHas_full_name(String newHas_full_name);

    /**
     * Removes a has_full_name property value.<p>
     * 
     * @param oldHas_full_name the has_full_name property value to be removed.
     */
    void removeHas_full_name(String oldHas_full_name);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
